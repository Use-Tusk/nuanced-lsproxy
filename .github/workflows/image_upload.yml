name: Publish Docker Image
on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+*'  # Matches PEP 440 versions like 0.1.0a1

jobs:
  docker-publish:
    strategy:
      matrix:
        config:
          - arch: amd64
            runner: ubuntu-latest
            platform: linux/amd64
          - arch: arm64
            runner: ubuntu-latest-arm64-8-core
            platform: linux/arm64
    runs-on: ${{ matrix.config.runner }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # Updated to v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3  # Updated to v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-${{ matrix.config.arch }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.config.arch }}-buildx-

      - name: Extract version from tag
        id: get_version
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: agenticlabs
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4  # Updated to v4
        with:
          context: ./lsproxy
          file: ./release/Dockerfile
          push: true
          platforms: ${{ matrix.config.platform }}
          tags: |
            agenticlabs/lsproxy:${{ steps.get_version.outputs.VERSION }}-${{ matrix.config.arch }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  merge-manifests:
    needs: docker-publish
    runs-on: ubuntu-latest
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: agenticlabs
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
          
      - name: Extract version from tag
        id: get_version
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Create and push manifest list
        run: |
          VERSION="${{ steps.get_version.outputs.VERSION }}"
          
          # Create and push the version-specific manifest
          docker manifest create agenticlabs/lsproxy:${VERSION} \
            agenticlabs/lsproxy:${VERSION}-amd64 \
            agenticlabs/lsproxy:${VERSION}-arm64
          
          docker manifest push agenticlabs/lsproxy:${VERSION}
          
          # Create and push the latest manifest
          docker manifest create agenticlabs/lsproxy:latest \
            agenticlabs/lsproxy:${VERSION}-amd64 \
            agenticlabs/lsproxy:${VERSION}-arm64
          
          docker manifest push agenticlabs/lsproxy:latest
