id: function
language: cpp

utils:
  inside_declarator:
    any:
      - kind: identifier
      - kind: field_identifier
      - kind: operator_name
    inside:
      kind: function_declarator
      field: declarator

rule:
  any:
    - kind: identifier
    - kind: field_identifier
    - kind: operator_name
  inside:
    kind: function_definition
    stopBy: end
  # the reason we use a utility rule is:
  # 1. we expect the surrounding context to be the last meta var
  # 2. going inside function_declaration - inside function_definition means that function declaration is the last node
  # 3. that is not the full context we want, so we do inside function definition stop by end
  # 4. then we use the utility rule to get only the name of the function as opposed to every identifier inside it
  matches: inside_declarator

