# coding: utf-8

"""
    lsproxy

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from lsproxy_sdk.models.code_context import CodeContext

class TestCodeContext(unittest.TestCase):
    """CodeContext unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CodeContext:
        """Test CodeContext
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CodeContext`
        """
        model = CodeContext()
        if include_optional:
            return CodeContext(
                range = lsproxy_sdk.models.file_range.FileRange(
                    end = lsproxy_sdk.models.position.Position(
                        character = 5, 
                        line = 10, ), 
                    path = 'src/main.py', 
                    start = lsproxy_sdk.models.position.Position(
                        character = 5, 
                        line = 10, ), ),
                source_code = ''
            )
        else:
            return CodeContext(
                range = lsproxy_sdk.models.file_range.FileRange(
                    end = lsproxy_sdk.models.position.Position(
                        character = 5, 
                        line = 10, ), 
                    path = 'src/main.py', 
                    start = lsproxy_sdk.models.position.Position(
                        character = 5, 
                        line = 10, ), ),
                source_code = '',
        )
        """

    def testCodeContext(self):
        """Test CodeContext"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
